apiVersion: apps/v1
kind: Deployment
metadata:
  name:  deployment-061-red2
  namespace: default
spec:
  selector:
    matchLabels:
      CustodianRule: ecc-k8s-061-minimize_the_admission_of_windows_hostprocess_cont
      ComplianceStatus: Red2
  replicas: 1
  template:
    metadata:
      labels:
        CustodianRule: ecc-k8s-061-minimize_the_admission_of_windows_hostprocess_cont
        ComplianceStatus: Red2
    spec:
      hostNetwork: true
      terminationGracePeriodSeconds: 0
      initContainers:
      - name: init-container1-windows-server-iis-061-red2
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        command: [powershell, -command]
        args: [Get-ChildItem, C:\k]
        securityContext:
          windowsOptions:
            hostProcess: true
            runAsUserName: "NT AUTHORITY\\system"
      - name: init-container2-windows-server-iis-061-red2
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        command: [powershell, -command]
        args: [Get-ChildItem, C:\]
        securityContext:
          windowsOptions:
            hostProcess: true
            runAsUserName: "NT AUTHORITY\\system"
      containers:
      - name: container-windows-server-iis-061-red2
        image: mcr.microsoft.com/powershell:lts-nanoserver-1809
        command:
          - powershell.exe
          - -command
          - |
              while ($true) { Start-Sleep -Seconds 2147483 }
        securityContext:
          windowsOptions:
            hostProcess: true
            runAsUserName: "NT AUTHORITY\\system"
        ports:
        - name: http
          containerPort: 82
        imagePullPolicy: IfNotPresent
      nodeSelector:
        kubernetes.io/os: windows
